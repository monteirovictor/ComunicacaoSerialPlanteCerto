/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MonitorSerial.Gui;

import MonitorSerial.Controle.ControleMonitor;
import gnu.io.NoSuchPortException;
import gnu.io.PortInUseException;
import gnu.io.UnsupportedCommOperationException;
import java.util.TooManyListenersException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Victor
 */
public class GuiMonitor extends javax.swing.JFrame {

    private String[] listaPortas = null;
    private Integer[] listaBaudrates;
    private ControleMonitor controleMonitor;
    
    /**
     * Creates new form GuiMonitor
     */
    public GuiMonitor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTARecebimento = new javax.swing.JTextArea();
        jTFEnviarDados = new javax.swing.JTextField();
        jCBBaudrates = new javax.swing.JComboBox<>();
        jCBPortas = new javax.swing.JComboBox<>();
        jBEnviar = new javax.swing.JButton();
        jBAjuda = new javax.swing.JButton();
        jToggleBConexao = new javax.swing.JToggleButton();
        jCBAutoRolagem = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jScrollPane1.setAutoscrolls(true);

        jTARecebimento.setEditable(false);
        jTARecebimento.setColumns(20);
        jTARecebimento.setRows(5);
        jTARecebimento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTARecebimentoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTARecebimento);

        jTFEnviarDados.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFEnviarDadosKeyPressed(evt);
            }
        });

        jCBBaudrates.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jCBBaudrates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBBaudratesActionPerformed(evt);
            }
        });

        jCBPortas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jCBPortas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBPortasItemStateChanged(evt);
            }
        });
        jCBPortas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBPortasActionPerformed(evt);
            }
        });

        jBEnviar.setText("Enviar");
        jBEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEnviarActionPerformed(evt);
            }
        });

        jBAjuda.setText("Ajuda");
        jBAjuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAjudaActionPerformed(evt);
            }
        });

        jToggleBConexao.setText("Conectar");
        jToggleBConexao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleBConexaoActionPerformed(evt);
            }
        });

        jCBAutoRolagem.setSelected(true);
        jCBAutoRolagem.setText("Auto Rolagem");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTFEnviarDados)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBAjuda)
                        .addGap(18, 18, 18)
                        .addComponent(jCBAutoRolagem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                        .addComponent(jCBPortas, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBBaudrates, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleBConexao, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFEnviarDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBEnviar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBBaudrates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBPortas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAjuda)
                    .addComponent(jToggleBConexao)
                    .addComponent(jCBAutoRolagem))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        if(!jToggleBConexao.isSelected()){
            this.listaPortas = this.controleMonitor.getPortas();
            jCBPortas.removeAllItems();
            if(this.listaPortas != null){
                for(String porta: listaPortas){
                    if(porta!=null){
                        jCBPortas.addItem(porta);
                    }
                }
            }
        }
        
    }//GEN-LAST:event_formWindowActivated

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        this.controleMonitor = new ControleMonitor(this);
        jCBPortas.removeAllItems();
        jCBBaudrates.removeAllItems();
        this.formWindowActivated(null);
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        this.jToggleBConexao.setSelected(false);
        jToggleBConexaoActionPerformed(null);
    }//GEN-LAST:event_formWindowClosed

    private void jBEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEnviarActionPerformed
        // TODO add your handling code here:
        if(jToggleBConexao.isSelected()){
            this.controleMonitor.transmicao(jTFEnviarDados.getText());
            jTFEnviarDados.setText("");
        }
    }//GEN-LAST:event_jBEnviarActionPerformed

    private void jBAjudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAjudaActionPerformed
        // TODO add your handling code here:
        //new GuiAjuda().setVisible(true);
    }//GEN-LAST:event_jBAjudaActionPerformed

    private void jTFEnviarDadosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFEnviarDadosKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == 10){
            jBEnviarActionPerformed(null);
        }
    }//GEN-LAST:event_jTFEnviarDadosKeyPressed

    private void jTARecebimentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTARecebimentoMouseClicked
        // TODO add your handling code here:
        if(evt.getButton() == 3){
            
        }
    }//GEN-LAST:event_jTARecebimentoMouseClicked

    private void jToggleBConexaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleBConexaoActionPerformed
        // TODO add your handling code here:
        Exception erro = null;
        if(jToggleBConexao.isSelected()){
            jToggleBConexao.setText("Desconectar");
            jCBPortas.setEnabled(false);
            jCBBaudrates.setEnabled(false);
            try {
                this.controleMonitor.startComunicacao((String)jCBPortas.getSelectedItem(),
                    Integer.parseInt((String)jCBBaudrates.getSelectedItem()), 0);
            } catch (NoSuchPortException ex) {
                erro = ex;
                Logger.getLogger(GuiMonitor.class.getName()).log(Level.SEVERE, null, ex);
            } catch (PortInUseException ex) {
                erro = ex;
                Logger.getLogger(GuiMonitor.class.getName()).log(Level.SEVERE, null, ex);
            } catch (TooManyListenersException ex) {
                erro = ex;
                Logger.getLogger(GuiMonitor.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedCommOperationException ex) {
                erro = ex;
                Logger.getLogger(GuiMonitor.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                if(erro != null){
                    jToggleBConexao.setSelected(false);
                    jToggleBConexao.setText("Conectar");
                    jCBPortas.setEnabled(true);
                    jCBBaudrates.setEnabled(true);
                }
            }
        }else{
            jToggleBConexao.setText("Conectar");
            jCBPortas.setEnabled(true);
            jCBBaudrates.setEnabled(true);
            this.controleMonitor.stopComunicacao();
        }
    }//GEN-LAST:event_jToggleBConexaoActionPerformed

    private void jCBPortasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBPortasItemStateChanged
        // TODO add your handling code here:
        if(!jToggleBConexao.isSelected()){
            this.listaBaudrates = this.controleMonitor.getBaudrates("Não aolicavel");
            jCBBaudrates.removeAllItems();
            if(this.listaBaudrates != null){
                for(Integer baudrate: listaBaudrates){
                    jCBBaudrates.addItem(baudrate.toString());
                }
            }
        }
    }//GEN-LAST:event_jCBPortasItemStateChanged

    private void jCBPortasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBPortasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBPortasActionPerformed

    private void jCBBaudratesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBBaudratesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBBaudratesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiMonitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiMonitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiMonitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiMonitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiMonitor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAjuda;
    private javax.swing.JButton jBEnviar;
    private javax.swing.JCheckBox jCBAutoRolagem;
    private javax.swing.JComboBox<String> jCBBaudrates;
    private javax.swing.JComboBox<String> jCBPortas;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTARecebimento;
    private javax.swing.JTextField jTFEnviarDados;
    private javax.swing.JToggleButton jToggleBConexao;
    // End of variables declaration//GEN-END:variables

    public void ajustarDados(String dados){
        /*String dadosTela = this.jTARecebimento.getText();
        dadosTela = dadosTela + dados;
        this.jTARecebimento.setText(dadosTela);*/
        this.jTARecebimento.append(dados);
        if(jCBAutoRolagem.isSelected()){  
            jTARecebimento.getCaret().setDot( jTARecebimento.getText().length() );
            jScrollPane1.scrollRectToVisible(jTARecebimento.getVisibleRect() );
        }
    }

}
